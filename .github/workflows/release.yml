name: release

on:
  push:
    branches:
      - master

env:
  RUST_VERSION: 1.59.0
  RUSTFLAGS: "-D warnings"
  RUSTDOCFLAGS: "-D warnings"

jobs:
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    if: github.repository == 'polarmutex/beancount-language-server'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: manifest

    # Build sources for every OS
  build:
    needs: release_please
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: macos-11
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-11
            target: aarch64-apple-darwin
            code-target: darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64

    name: package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true

    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install arm64 toolchain
        if: matrix.code-target == 'linux-arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: setup cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}

      - name: setup rust
        uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: setup rust-cache
        uses: Swatinem/rust-cache@v2

      - name: build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: copy cli binary
        if: matrix.os == 'windows-latest'
        run: |
          mkdir dist
          mkdir vscode/server
          ls target
          ls target/${{ matrix.target }}
          ls target/${{ matrix.target }}/release
          cp target/${{ matrix.target }}/release/beancount-language-server.exe dist/beancount-language-server-${{ matrix.code-target }}.exe
          cp target/${{ matrix.target }}/release/beancount-language-server.exe vscode/server/beancount-language-server.exe

      - name: copy cli binary
        if: matrix.os != 'windows-latest'
        run: |
          mkdir dist
          mkdir vscode/server
          cp target/${{ matrix.target }}/release/beancount-language-server dist/beancount-language-server-${{ matrix.code-target }}
          cp target/${{ matrix.target }}/release/beancount-language-server vscode/server/beancount-language-server

      - name: package extension
        run: |
          npm ci
          npm run package
          npx vsce package -o "../dist/beancount-language-server-${{ matrix.code-target }}.vsix" --target ${{ matrix.code-target }}
        working-directory: vscode

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lsp
          path: ./dist/*
          files: dist/*
          if-no-files-found: error

  publish:
    name: Publish Cargo Package
    needs: [release_please, build]
    runs-on: ubuntu-latest
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_API_KEY }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Publish beancount-language-server
        run: cargo publish

      - name: download extension artifacts
        uses: actions/download-artifact@v3
        with:
          name: lsp
          path: artifacts

      - name: install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: "https://registry.npmjs.org"

      - name: publish extension
        run: |
          npm ci
          npx vsce publish --packagePath artifacts/beancount-language-server-*.vsix
        if: needs.build.outputs.prerelease != 'true'
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Post Build | Add Artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          tag_name: ${{ needs.release_please.outputs.tag_name }}
